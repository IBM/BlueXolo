version: "3.8"
services:
  bluexolo:
    image: bluexolo/bluexolo:3.1.0-production
    volumes:
      - production_media:/var/www/media
    env_file:
      - ./.env
    build:
      context: .
      dockerfile: ./docker/bluexolo-prod.dockerfile
      args:
        USER_PASSWORD: bluexolo
    container_name: bluexolo
    depends_on:
      - postgres
      - botpress
      - celery
      - robot3.2.2
      - redis
    restart: on-failure
  proxy:
    image: bluexolo/proxy:nginx
    restart: always
    build:
      context: .
      dockerfile: ./proxy/proxy.dockerfile
    volumes:
      - production_media:/var/www/media
    environment:
      NGINX_PORT: 80
      BLUEXOLO_HOST: bluexolo
      BLUEXOLO_PORT: 8000
      BOTPRESS_HOST: bluexolo-assistant
      BOTPRESS_PORT: 3000
      NGINX_ENTRYPOINT_QUIET_LOGS: 1
    ports:
      - "80:80"
    container_name: bluexolo-proxy
    depends_on:
      - bluexolo
      - botpress
    restart: on-failure
  redis:
    image: redis:6.2.1-alpine
  celery:
    image: bluexolo/bluexolo:3.1.0-production
    volumes:
      - production_media:/var/www/media
    env_file:
      - ./.env
    container_name: bluexolo-celery
    command: ["/bin/bash", "docker/celery-entrypoint.sh"]
  postgres:
    image: postgres:9.6.21-alpine
    volumes:
      - production_db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: bluexolo
      POSTGRES_PASSWORD: bluexolo
      POSTGRES_DB: bluexolo
    container_name: bluexolo-postgres
    command: -c listen_addresses=*
  botpress:
    image: bluexolo/assistant
    container_name: bluexolo-assistant
    environment: 
      EXTERNAL_URL: "http://localhost/botpress"
      BP_HOST: "localhost"
      PORT: 3000
      REVERSE_PROXY: 1
      BP_PRODUCTION: 1
      VERBOSITY_LEVEL: 1
  robot3.2.2:
    image: bluexolo/robot:3.2.2
    volumes:
      - production_media:/var/www/media
    build:
      context: ./docker
      dockerfile: robotframework.dockerfile
      args:
        USER_PASSWORD: bluexolo
        ROBOT_VERSION: 3.2.2
    container_name: robot3.2.2
  robot4.0:
    image: bluexolo/robot:4.0
    build:
      context: ./docker
      dockerfile: robotframework.dockerfile
      args:
        USER_PASSWORD: bluexolo
        ROBOT_VERSION: 4.0
    container_name: robot4.0
  robot2.9:
    image: bluexolo/robot:2.9
    build:
      context: ./docker
      dockerfile: robotframework.dockerfile
      args:
        USER_PASSWORD: bluexolo
        ROBOT_VERSION: 2.9
        PYTHON_VERSION: 2.7
        ROBOT_EXECUTABLE: pybot
    container_name: robot2.9
volumes:
  production_media:
  production_db: